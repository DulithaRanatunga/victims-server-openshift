#!/bin/bash

function fixcfg()
{
	# handle nonconfigurable application config
	if [ -z "$(grep 'VICTIMS_CONFIG' $OPENSHIFT_DATA_DIR/victims-web/src/victims_web/application.py)"  ]; then
		echo "[build] Applying victimsweb.cfg to application.cfg"
		cp $OPENSHIFT_REPO_DIR/config/victimsweb.cfg $OPENSHIFT_REPO_DIR/libs/victims_web/application.cfg
	fi
}

source $OPENSHIFT_REPO_DIR/config/victimsweb.build.env
if [ ! -d $OPENSHIFT_REPO_DIR/libs/victims_web ]; then
	if [ -d $OPENSHIFT_DATA_DIR/victims-web ]; then
		ORIGINAL=$(cd $OPENSHIFT_DATA_DIR/victims-web && git config remote.origin.url)
		if [ "$ORIGINAL" != "$VICTIMS_GIT_URL" ]; then
			VICTIMS_GIT_CLEAN=1
		fi
	fi
	if [ $VICTIMS_GIT_CLEAN -eq 1 ]; then
		echo "[build] Deleting old checkout of victims-web"
		rm -rf $OPENSHIFT_DATA_DIR/victims-web
	fi
	if [ ! -d $OPENSHIFT_DATA_DIR/victims-web ]; then
		echo "[build] Cloning victims-web from $VICTIMS_GIT_URL"
		git clone $VICTIMS_GIT_URL $OPENSHIFT_DATA_DIR/victims-web
	fi
	echo "[build] Switching to branch $VICTIMS_GIT_BRANCH"
	(cd $OPENSHIFT_DATA_DIR/victims-web && git checkout $VICTIMS_GIT_BRANCH)
	echo "[build] Fetching any updates for victims-web"
	(cd $OPENSHIFT_DATA_DIR/victims-web && git pull --rebase)
	echo "[build] Copying over victims-web contents to app repo"
	cp -R $OPENSHIFT_DATA_DIR/victims-web/src/victims_web $OPENSHIFT_REPO_DIR/libs/.
	cp -R $OPENSHIFT_DATA_DIR/victims-web/src/victims_web/blueprints/ui/static $OPENSHIFT_REPO_DIR/wsgi/.
	fixcfg
fi

PYDIR=$(find $OPENSHIFT_HOMEDIR -maxdepth 1 -type d -name "python*" | sort | tail -n 1)
if [ -f ${PYDIR}/virtenv/bin/activate ]; then
	echo "[build] Activating python environment"
	if [ -f ${PYDIR}/activate_virtenv ]; then
		source $PYDIR/activate_virtenv
	else
		echo "[build] activate_virtenv not found, falling back to manual"
		export LD_LIBRARY_PATH="${PYDIR}/opt/lib:${LD_LIBRARY_PATH}" 
		export LIBRARY_PATH="${PYDIR}/opt/lib:${LIBRARY_PATH}" 
		source ${PYDIR}/bin/source_env_vars
		source ${PYDIR}/virtenv/bin/activate
	fi
	if type -p pip > /dev/null; then
		echo "[build] Installing dependencies for victims-web"
		pip install --use-mirrors -e $OPENSHIFT_DATA_DIR/victims-web
	else
		echo "[build] Could not find pip in environment. Skipping dependency install"
	fi
else
	echo "[build] Could not activate vitualenv to perform dependency installs"
fi
